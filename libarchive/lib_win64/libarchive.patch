diff --git a/CMakeLists.txt b/CMakeLists.txt
index 061ad630..57205675 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -17,6 +17,7 @@ endif()
 #   Release        : Release build
 #   RelWithDebInfo : Release build with Debug Info
 #   MinSizeRel     : Release Min Size build
+SET(BUILD_SHARED_LIBS OFF)
 IF(NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Build Type" FORCE)
 ENDIF(NOT CMAKE_BUILD_TYPE)
@@ -193,37 +194,37 @@ ENDIF (MSVC)
 # Enable CTest/CDash support
 include(CTest)
 
-OPTION(ENABLE_NETTLE "Enable use of Nettle" ON)
-OPTION(ENABLE_OPENSSL "Enable use of OpenSSL" ON)
-OPTION(ENABLE_LIBB2 "Enable the use of the system LIBB2 library if found" ON)
-OPTION(ENABLE_LZ4 "Enable the use of the system LZ4 library if found" ON)
+OPTION(ENABLE_NETTLE "Enable use of Nettle" OFF)
+OPTION(ENABLE_OPENSSL "Enable use of OpenSSL" OFF)
+OPTION(ENABLE_LIBB2 "Enable the use of the system LIBB2 library if found" OFF)
+OPTION(ENABLE_LZ4 "Enable the use of the system LZ4 library if found" OFF)
 OPTION(ENABLE_LZO "Enable the use of the system LZO library if found" OFF)
 OPTION(ENABLE_LZMA "Enable the use of the system LZMA library if found" ON)
-OPTION(ENABLE_ZSTD "Enable the use of the system zstd library if found" ON)
+OPTION(ENABLE_ZSTD "Enable the use of the system zstd library if found" OFF)
 
 OPTION(ENABLE_ZLIB "Enable the use of the system ZLIB library if found" ON)
 OPTION(ENABLE_BZip2 "Enable the use of the system BZip2 library if found" ON)
-OPTION(ENABLE_LIBXML2 "Enable the use of the system libxml2 library if found" ON)
-OPTION(ENABLE_EXPAT "Enable the use of the system EXPAT library if found" ON)
-OPTION(ENABLE_PCREPOSIX "Enable the use of the system PCREPOSIX library if found" ON)
-OPTION(ENABLE_LibGCC "Enable the use of the system LibGCC library if found" ON)
+OPTION(ENABLE_LIBXML2 "Enable the use of the system libxml2 library if found" OFF)
+OPTION(ENABLE_EXPAT "Enable the use of the system EXPAT library if found" OFF)
+OPTION(ENABLE_PCREPOSIX "Enable the use of the system PCREPOSIX library if found" OFF)
+OPTION(ENABLE_LibGCC "Enable the use of the system LibGCC library if found" OFF)
 # CNG is used for encrypt/decrypt Zip archives on Windows.
 OPTION(ENABLE_CNG "Enable the use of CNG(Crypto Next Generation)" ON)
 
-OPTION(ENABLE_TAR "Enable tar building" ON)
+OPTION(ENABLE_TAR "Enable tar building" OFF)
 OPTION(ENABLE_TAR_SHARED "Enable dynamic build of tar" FALSE)
-OPTION(ENABLE_CPIO "Enable cpio building" ON)
+OPTION(ENABLE_CPIO "Enable cpio building" OFF)
 OPTION(ENABLE_CPIO_SHARED "Enable dynamic build of cpio" FALSE)
-OPTION(ENABLE_CAT "Enable cat building" ON)
+OPTION(ENABLE_CAT "Enable cat building" OFF)
 OPTION(ENABLE_CAT_SHARED "Enable dynamic build of cat" FALSE)
-OPTION(ENABLE_XATTR "Enable extended attribute support" ON)
-OPTION(ENABLE_ACL "Enable ACL support" ON)
-OPTION(ENABLE_ICONV "Enable iconv support" ON)
-OPTION(ENABLE_TEST "Enable unit and regression tests" ON)
+OPTION(ENABLE_XATTR "Enable extended attribute support" OFF)
+OPTION(ENABLE_ACL "Enable ACL support" OFF)
+OPTION(ENABLE_ICONV "Enable iconv support" OFF)
+OPTION(ENABLE_TEST "Enable unit and regression tests" OFF)
 OPTION(ENABLE_COVERAGE "Enable code coverage (GCC only, automatically sets ENABLE_TEST to ON)" FALSE)
-OPTION(ENABLE_INSTALL "Enable installing of libraries" ON)
+OPTION(ENABLE_INSTALL "Enable installing of libraries" OFF)
 
-SET(POSIX_REGEX_LIB "AUTO" CACHE STRING "Choose what library should provide POSIX regular expression support")
+SET(POSIX_REGEX_LIB "NONE" CACHE STRING "Choose what library should provide POSIX regular expression support")
 SET(ENABLE_SAFESEH "AUTO" CACHE STRING "Enable use of /SAFESEH linker flag (MSVC only)")
 SET(WINDOWS_VERSION "WIN7" CACHE STRING "Set Windows version to use (Windows only)")
 
@@ -414,29 +415,6 @@ IF(ZLIB_FOUND)
   SET(HAVE_ZLIB_H 1)
   INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIR})
   LIST(APPEND ADDITIONAL_LIBS ${ZLIB_LIBRARIES})
-  IF(WIN32 AND NOT CYGWIN)
-    #
-    # Test if ZLIB_WINAPI macro is needed to use.
-    #
-    TRY_MACRO_FOR_LIBRARY(
-      "${ZLIB_INCLUDE_DIR}" "${ZLIB_LIBRARIES}"
-      RUNS
-      "#include <zlib.h>\nint main() {uLong f = zlibCompileFlags(); return (f&(1U<<10))?0:-1; }"
-      ZLIB_WINAPI)
-    IF(ZLIB_WINAPI)
-      ADD_DEFINITIONS(-DZLIB_WINAPI)
-    ELSE(ZLIB_WINAPI)
-      # Test if a macro is needed for the library.
-      TRY_MACRO_FOR_LIBRARY(
-        "${ZLIB_INCLUDE_DIR}" "${ZLIB_LIBRARIES}"
-        COMPILES
-        "#include <zlib.h>\nint main() {return zlibVersion()?1:0; }"
-        "ZLIB_DLL;WITHOUT_ZLIB_DLL")
-      IF(ZLIB_DLL)
-        ADD_DEFINITIONS(-DZLIB_DLL)
-      ENDIF(ZLIB_DLL)
-    ENDIF(ZLIB_WINAPI)
-  ENDIF(WIN32 AND NOT CYGWIN)
 ENDIF(ZLIB_FOUND)
 MARK_AS_ADVANCED(CLEAR ZLIB_INCLUDE_DIR)
 MARK_AS_ADVANCED(CLEAR ZLIB_LIBRARY)
@@ -458,12 +436,10 @@ IF(BZIP2_FOUND)
     "${BZIP2_INCLUDE_DIR}" "${BZIP2_LIBRARIES}"
     COMPILES
     "#include <bzlib.h>\nint main() {return BZ2_bzlibVersion()?1:0; }"
-    "USE_BZIP2_DLL;USE_BZIP2_STATIC")
-  IF(USE_BZIP2_DLL)
-    ADD_DEFINITIONS(-DUSE_BZIP2_DLL)
-  ELSEIF(USE_BZIP2_STATIC)
+    "USE_BZIP2_STATIC;USE_BZIP2_DLL")
+  IF(USE_BZIP2_STATIC)
     ADD_DEFINITIONS(-DUSE_BZIP2_STATIC)
-  ENDIF(USE_BZIP2_DLL)
+  ENDIF(USE_BZIP2_STATIC)
 ENDIF(BZIP2_FOUND)
 MARK_AS_ADVANCED(CLEAR BZIP2_INCLUDE_DIR)
 MARK_AS_ADVANCED(CLEAR BZIP2_LIBRARIES)
diff --git a/libarchive/archive_read_support_format_zip.c b/libarchive/archive_read_support_format_zip.c
index 9934bf15..d0422409 100644
--- a/libarchive/archive_read_support_format_zip.c
+++ b/libarchive/archive_read_support_format_zip.c
@@ -1797,6 +1797,7 @@ zip_read_data_zipx_lzma_alone(struct archive_read *a, const void **buff,
 			    "lzma data error (error %d)", (int) lz_ret);
 			return (ARCHIVE_FATAL);
 
+		case LZMA_STREAM_END:
 		case LZMA_OK:
 			break;
 
